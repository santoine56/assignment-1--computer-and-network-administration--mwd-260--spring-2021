## / 1
Errors, access events, and system logs in Linux are kept in a pseudo-filesystem that is retained in memory, not non-volatile storage, and is designed for system admins. Write a command that monitors and updates in real time system changes, such as USB connections. (**25pts**)

```bash
```
tail -fn /var/log/syslog

---

## / 2
Default bash profile files are sourced from multiple directories in the Linux filesystem. Locate the file that has the starter aliases and add an alias to the `rm` and `mv` commands that force interaction: `-i`. Then, using your own name, create a non-admin user and use the following algorithm: `first-name--last-name`. (**Note the double dashes**.) Log in to the system as this new user, launch a Terminal, then run the command `alias`. Look for your new aliases. Once youâ€™ve verified that it worked, include the absolute path to the file, including the file itself below. Then copy 11 lines from that file: The 5 lines that precede the line where you made the change, the line where you made the change, and the 5 lines that follow the line where you made the change. (**25pts**)

```
path/to/file
```

```bash
```alias grep='grep--color=auto'
  alias fgrep='fgrep --color=auto'
  alias='egrep --color=auto'
  alias ll='ls-alF'
  alias la='ls -A'
  alias l='ls -CF'
  alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e `\` `s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
```
---

## / 3
In Linux, the `swapper_process`, created by the `start_kernel` function, in Linux has a PID `0`. It, in turn, spawns the `init`ial process with PID `1`. Recall that processes in Linux get a PID that is represented by a pseudo-filesystem in Linux. Write a command, or commands, that produces the following output in relation to PID `1`. (**25pts**)

**Hint**: You may need to pipe the output of one command into another.

```bash
```
$ grep 'State' /proc/1/status
```

---

## / 4
The `du` command will output disk, or file space, usage. Write a variant of the `du` command that outputs the following when run from your home folder. (**25pts**)


```bash
```
du -c -h -d 0 $(ls)
```
